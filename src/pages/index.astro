---
import { getCollection } from "astro:content";
import { contentfulClient } from "../lib/contentful";

import HomeLayout from "../layouts/HomeLayout.astro";
import Hero from "../components/Hero.astro";
import Quote from "../components/Quote.astro";

const notesWithDate = (
  await getCollection("posts", ({ data }) => {
    return data.published !== false;
  })
)
  .sort((a, b) => {
    return b.data.publishedDate?.valueOf() - a.data.publishedDate?.valueOf();
  })
  .slice(0, 5);

const projects = await getCollection("work", ({ data }) => {
  return data.draft !== true;
});

function shuffle(array) {
  let counter = array.length;

  // While there are elements in the array
  while (counter > 0) {
    // Pick a random index
    let index = Math.floor(Math.random() * counter);

    // Decrease counter by 1
    counter--;

    // And swap the last element with it
    let temp = array[counter];
    array[counter] = array[index];
    array[index] = temp;
  }

  return array;
}

const quotes = await contentfulClient
  .getEntries({
    content_type: "testimonial",
  })
  .then((response) => {
    return {
      items: shuffle(response.items),
    };
  });

const title = "Accessibility and design systems consultant"
---

<HomeLayout>
      <Hero title={title}>
          <p slot="header-extras">
            I embed <b>accessibility</b> in design systems. Currently building <a href="https://www.publicisgroupeuk.com/news-and-views/news/after-another-record-year-ahead-of-expectations-publicis-unveils-ai-strategy-to-lead-group-into-its-second-century/">CoreAI</a> @ <a href="https://publicissapient.com">Publicis Sapient</a>.
          </p>
      </Hero>

      <svg viewBox="0 0 500 500" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" style="filter: url(#displacementFilter)">

        <circle cx="250" cy="250" r="10" stroke="currentColor" stroke-width="2"/>
        <circle cx="249" cy="249" r="45" stroke="currentColor" stroke-width="3"/>
        <circle cx="251" cy="251" r="80" stroke="currentColor" stroke-width="3"/>
        <circle cx="250" cy="250" r="105" stroke="currentColor" stroke-width="3"/>
        <circle cx="249" cy="249" r="125" stroke="currentColor" stroke-width="3"/>
        <circle cx="251" cy="251" r="155" stroke="currentColor" stroke-width="2"/>
        <circle cx="249" cy="249" r="175" stroke="currentColor" stroke-width="3"/>
        <circle cx="251" cy="251" r="200" stroke="currentColor" stroke-width="3"/>
        <circle cx="250" cy="250" r="220" stroke="currentColor" stroke-width="3"/>
        <circle cx="250" cy="250" r="249" stroke="currentColor" stroke-width="3" />

        <filter id="displacementFilter">
          <feTurbulence
            type="turbulence"
            baseFrequency="0.05"
            numOctaves="1"
            result="turbulence" />
          <feDisplacementMap
            in2="turbulence"
            in="SourceGraphic"
            scale="2"
            xChannelSelector="R"
            yChannelSelector="G" />
        </filter>

        </svg>

    <!-- <section class="wrapper--projects">
      <h2 class="visually-hidden">Work</h2>
      <ol class="projects grid">
        {
          projects.map((project) => (
            <li class="card card--project">
              <div class="project-listing">
                <div class="card__cover">
                  <div class="thumb-grid">
                    {[...Array(9)].map(() => (
                      <div class="thumb-grid__thumb">
                        <img
                          src={project.data.img}
                          alt=""
                          class="cover__thumb"
                          height="50"
                          width="50"
                        />
                      </div>
                    ))}
                  </div>
                </div>
                <div class="card__content flow">
                  <a href={`/work/${project.slug}`} class="title">
                    {project.data.title}
                  </a>
                  <div class="meta">
                    <span class="org">Talis</span>
                    <time
                      class="date"
                      datetime={project.data.publishDate.toISOString()}
                    >
                      {project.data.projectDate}
                    </time>
                  </div>
                  <p>{project.data.description}</p>
                  <ul class="roles" role="list">
                    {project.data.tags.map((tag) => (
                      <li>{tag}</li>
                    ))}
                  </ul>
                </div>
              </div>
            </li>
          ))
        }
      </ol>

      <div class="card card--example">
        <Browser />
      </div>
      <div class="card card--example">
        <Volume/>
      </div>
    </section> -->

    <!-- <section class="talks wrapper--links">
      <h2>Talks</h2>
        <ol role="list" class="flow">
          <li>
            <a href="https://noti.st/danielmatthew/5fk25b/a11y-101">Accessibility 101</a>
            <time class="meta">Feb 2023</time>
          </li>

        <li>
          <a href="https://noti.st/danielmatthew/pocE5Y/accessibility-testing">Accessibility Testing</a>
          <span class="meta">BrumJS, &nbsp; <time>May 2018</time></span>
        </li>

        <li>
          <a href="https://noti.st/danielmatthew/hzSpy0/screenreader-accessibility">Screenreader Accessibility</a>
          <span class="meta">Codelicious, &nbsp;<time>July 2016</time></span>
        </li>

      </ol>
    </section> -->

    <!-- <section class="elsewhere wrapper--links">
      <h2>Elsewhere</h2>
        <ol role="list" class="flow">
          <li>
            <a href="https://talis.com/2020/09/24/why-we-think-accessibility-is-important/" rel="external">Why we think accessibility is important</a>
            <span class="meta">Talis</span>
          </li>

        <li>
          <a href="https://www.codeenigma.com/blog/interview-accessibility-expert-daniel-matthew" rel="external">Interview with an accessibility expert</a>
          <span class="meta">CodeEnigma</span>
        </li>

      </ol>
    </section> -->

    <!-- <div class="wrapper--quotes">
      <section class="quotes">
        <hgroup class="flow">
          <h2>Quotes</h2>
          <p>Some nice things people have said about me</p>
        </hgroup>
        <div class="quote-container js-at-start">
          <div class="quote-scroller" tabindex="0">
            {quotes.items.map((quote) => <Quote quote={quote} />)}
          </div>
        </div>
      </section>
    </div> -->

</HomeLayout>
