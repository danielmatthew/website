---
import HomeLayout from "../layouts/HomeLayout.astro";
import ContactCTA from "../components/ContactCTA.astro";
import Quotes from "../components/Quotes.astro";

import { contentfulClient } from '../lib/contentful';
import type { portfolioEntry } from '../lib/contentful';

import PortfolioPreview from '../components/PortfolioPreview.astro';
import Quote from '../components/Quote.astro';

const projects = await contentfulClient.getEntries<portfolioEntry>({
  content_type: 'blogPost',
  order: '-fields.date',
});

function shuffle(array) {
  let counter = array.length;

  // While there are elements in the array
  while (counter > 0) {
    // Pick a random index
    let index = Math.floor(Math.random() * counter);

    // Decrease counter by 1
    counter--;

    // And swap the last element with it
    let temp = array[counter];
    array[counter] = array[index];
    array[index] = temp;
  }

  return array;
}

const quotes = await contentfulClient
  .getEntries({
    content_type: "testimonial",
  })
  .then((response) => {
    return {
      items: shuffle(response.items),
    };
  })
  .then((response) => {
    return {
      items: response.items.slice(0, 9),
    };
  });

const newQuotes = quotes.items.map((quote) => quote);
---
<HomeLayout >
  <div class="pointer">
    You have a coarse pointer
  </div>
  <main class="grid wrapper">
    <PortfolioPreview project={projects.items[0]} index={0} />
    <Quote quote={newQuotes[0]} />
    <Quote quote={newQuotes[4]} />
    <PortfolioPreview project={projects.items[2]} index={2} />
    <Quote quote={newQuotes[1]} />
    <Quote quote={newQuotes[2]} />
    <PortfolioPreview project={projects.items[1]} index={1} />
    <Quote quote={newQuotes[5]} />
    <Quote quote={newQuotes[3]} />
  </main>
</HomeLayout>
<style>
  .pointer {
    display: none;
  }

  @media(pointer: coarse) {
    .pointer {
      display: block;
    }
  }
</style>
<script>
  import { Gradient } from './mesh.js'

  import VanillaTilt from "vanilla-tilt";

  const isReducedMotion = window.matchMedia('(prefers-reduced-motion)').matches;
  const isCoarsePointer = window.matchMedia('(pointer: coarse)').matches;

  console.log(isCoarsePointer);
  if (!isReducedMotion || !isCoarsePointer) {
    VanillaTilt.init(document.querySelectorAll(".card--project"), {
      max: 2,
      glare: true,
      "max-glare": 0.25,
      gyroscope: false
    });
  }

  // const gradient = new Gradient();
  // gradient.initGradient('canvas');
</script>
