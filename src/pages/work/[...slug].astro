---
// import { CollectionEntry, getCollection } from "astro:content";
import { contentfulClient } from '../../lib/contentful';
import { documentToHtmlString } from '@contentful/rich-text-html-renderer';
import type { portfolioEntry } from '../../lib/contentful';

import BaseLayout from "../../layouts/BaseLayout.astro";

// interface Props {
//   entry: CollectionEntry<"work">;
// }

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
  // const work = await getCollection("work");
  // return work.map((entry) => ({
  //   params: { slug: entry.slug },
  //   props: { entry },
  // }));

  const entries = await contentfulClient.getEntries<portfolioEntry>({
    content_type: 'blogPost',
  });

  const pages = entries.items.map((item) => ({
    params: { slug: item.fields.slug },
    props: {
      title: item.fields.title,
      date: new Date(item.fields.date).toLocaleDateString(),
      summary: item.fields.summary,
      content: documentToHtmlString(item.fields.portfolioContent),
    }
  }));

  return pages;
}

// const { entry } = Astro.props;
const { content, title, date } = Astro.props;
// const { Content } = await entry.render();

// const date = new Date(entry.data.publishDate).toLocaleDateString();
---

<BaseLayout title={title}>
  <h1>{title}</h1>

  <article class="content" set:html={content}></article>
</BaseLayout>

<style>
  .content {
    max-width: 60ch;
    font-size: var(--step-0);
  }

  h2, h3 {
    font-family: 'Playfair Display', serif;
  }

  h2 {
    font-size: var(--step-2);
  }

  h3 {
    font-size: var(--step-1);
  }

  dd,dt {
    display: block;
  }
  dt {
    font-weight: bold;
  }

  dd {
    margin: 0;
  }

  a {
    color: inherit;
  }
</style>
