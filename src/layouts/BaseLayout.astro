---
import '../styles/global.css';
import Footer from '../components/Footer.astro';

interface Props {
  title?: string | undefined;
  description?: string | undefined;
  modifier?: string | undefined;
}

const isProd = import.meta.env.PROD;
const { title, description, modifier } = Astro.props;
---
<!DOCTYPE html>
<html lang="en-gb">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{title && `${title}: `}Dan Matthew is a designer and developer.</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Bricolage+Grotesque:opsz,wght@12..96,400;12..96,700&family=Space+Grotesk:wght@700&display=swap" rel="stylesheet">     <script is:inline>
      // This code is inlined in the head to make dark mode instant & blocking.
      const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }


        if (getThemePreference() === 'dark' || !getThemePreference() && window.matchMedia('(prefers-color-scheme: dark)').matches) {
        document.documentElement.classList.add('pause-transitions');
        document.documentElement.classList.add('theme-dark');
        document.head.querySelector('meta[name="theme-color"]').setAttribute('content', 'hsl(0, 0%, 0%)');

        requestAnimationFrame(() => {
          document.documentElement.classList.remove('pause-transitions');
        });

        return 'theme-dark';
      } else {
        document.documentElement.classList.add('pause-transitions');
        document.documentElement.classList.add('theme-light');
        document.head.querySelector('meta[name="theme-color"]').setAttribute('content', '#fcfcfc');

        requestAnimationFrame(() => {
          document.documentElement.classList.remove('pause-transitions');
        });

        return 'theme-light';
      }
      };




      if (typeof localStorage !== 'undefined') {
        // Watch the document element and persist user preference when it changes.
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains('theme-dark');
          localStorage.setItem('theme', isDark ? 'dark' : 'light');
        });
        observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
      }
    </script>
    <script defer>
      const konamiCode = '38,38,40,40,37,39,37,39,66,65';
      const keyPresses = [];
      const checkKonami = (e) => {
        keyPresses.push(e.keyCode);
        if (keyPresses.slice(keyPresses.length - 10).join() === konamiCode) {
          runKonami();
        }
      }
      const runKonami = () => {
        console.info('Cheat code activated!');
      }

      document.addEventListener('keyup', checkKonami);
    </script>
    {isProd &&
      <script>
        window.va = window.va || function () { (window.vaq = window.vaq || []).push(arguments); };
      </script>
      <script defer src="/_vercel/insights/script.js"></script>
    }
    <meta name="description" content="Dan Matthew is a designer and developer from the UK.">
    <meta name="view-transition" content="same-origin">
    <link rel="icon" href="/favicon.ico" sizes="any">
    <link rel="icon" href="/favicon.svg" type="image/svg+xml">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="manifest" href="/site.webmanifest">
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#fd7b2b">
    <meta name="msapplication-TileColor" content="#fd7b2b">
    <meta name="theme-color" content="hsl(0, 0%, 99%)">
  </head>
  <body>
    <slot />
    <Footer />
  </body>
</html>
